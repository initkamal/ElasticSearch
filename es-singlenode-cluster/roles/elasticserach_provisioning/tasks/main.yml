---
# tasks file for elasticserach_provisioning
- name: Servers IPs
  debug:
    msg: '{{ ansible_host }}'

- name: Installing JAVA
  apt:
    name: openjdk-8-jdk
  
- name: Import the Elasticsearch PGP Keyedit
  apt_key:
    url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
    state: present
  
- name: Adding Elasticsearch APT repository
  apt_repository:
    repo: deb https://artifacts.elastic.co/packages/7.x/apt stable main
    state: present

- name: Update repositories cache and install ELASTICSEARCH    
  apt:
    name: elasticsearch
    update_cache: yes

- name: Replace default elasticsearch.yml
  template:
   src: elasticsearch.yml.j2
   dest: /etc/elasticsearch/elasticsearch.yml

- name: Enable service elasticsearch
  service:
    name: elasticsearch
    enabled: yes

# Xpack secuity configuration

- name: create elasticsearch keystore
  command: >
    {{ elasticsearch_home }}/bin/elasticsearch-keystore create
  args:
    creates: "{{ elasticsearch_conf_dir }}/elasticsearch.keystore"
  environment:
    ES_CONF_PATH: "{{ elasticsearch_conf_dir }}"

- name: Set elasticsearch keystore permissions
  file: state=file path={{ elasticsearch_conf_dir }}/elasticsearch.keystore owner=elasticsearch group=root mode=0660

- name: Check if elasticsearch keystore is setup  
  command: >
   {{ elasticsearch_home }}/bin/elasticsearch-keystore list
  register: result
  changed_when: False
  environment:
    ES_CONF_PATH: " {{ elasticsearch_conf_dir }} "
  check_mode: no

- name: Create bootstrap password for elastic user
  become: yes
  shell: echo "{{ elasticsearch_auth_password }}" | {{ elasticsearch_home }}/bin/elasticsearch-keystore add -x 'bootstrap.password'
  when:
   - elasticsearch_auth_username is defined and result is defined and elasticsearch_auth_username == 'elastic' and 'bootstrap.password' not in result.stdout_lines
  environment:
    ES_CONF_PATH: " {{ elasticsearch_conf_dir }} "
  no_log: true

# TLS Configuration 

- name:  Create a certificate directory 
  file:
    owner: root
    group: '{{ elasticsearch_user_group }}'
    mode: u=rwx,g+rx,o-rwx
    path: '{{ elasticsearch_conf_dir }}/{{ elasticsearch_tls_cert_dir }}'
    state: directory
  when: elasticsearch_tls_cert_dir is defined

- name: Check a certificate of authority
  stat:
    path: "{{ elasticsearch_conf_dir }}/{{ elasticsearch_tls_cert_dir }}/elastic-stack-ca.p12"
  register: elastic_stack_ca_file

- name: Generate a certificate of authority
  args:
    chdir: '{{ elasticsearch_conf_dir }}'
  command: "'{{ elasticsearch_home }}'/bin/elasticsearch-certutil ca --out '{{ elasticsearch_conf_dir }}/{{ elasticsearch_tls_cert_dir }}'/elastic-stack-ca.p12 --pass '{{ elasticsearch_tls_cert_pass }}'"
  when: not elastic_stack_ca_file.stat.exists

- name: update permission
  file:
    mode: 0777
    path: '{{ elasticsearch_conf_dir }}/{{ elasticsearch_tls_cert_dir }}/elastic-stack-ca.p12'

- name: Start Elasticsearch Service
  service:
    name: elasticsearch
    state: started

